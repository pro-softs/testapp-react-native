{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Appbar/AppbarContent.tsx\";import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import color from'color';import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";import{white}from\"../../styles/colors\";var AppbarContent=function(_React$Component){_inherits(AppbarContent,_React$Component);function AppbarContent(){_classCallCheck(this,AppbarContent);return _possibleConstructorReturn(this,_getPrototypeOf(AppbarContent).apply(this,arguments));}_createClass(AppbarContent,[{key:\"render\",value:function render(){var _this$props=this.props,_this$props$color=_this$props.color,titleColor=_this$props$color===void 0?white:_this$props$color,subtitle=_this$props.subtitle,subtitleStyle=_this$props.subtitleStyle,onPress=_this$props.onPress,style=_this$props.style,titleRef=_this$props.titleRef,titleStyle=_this$props.titleStyle,theme=_this$props.theme,title=_this$props.title,rest=_objectWithoutProperties(_this$props,[\"color\",\"subtitle\",\"subtitleStyle\",\"onPress\",\"style\",\"titleRef\",\"titleStyle\",\"theme\",\"title\"]);var fonts=theme.fonts;var subtitleColor=color(titleColor).alpha(0.7).rgb().string();return React.createElement(TouchableWithoutFeedback,{onPress:onPress,__source:{fileName:_jsxFileName,lineNumber:83}},React.createElement(View,_extends({style:[styles.container,style]},rest,{__source:{fileName:_jsxFileName,lineNumber:84}}),React.createElement(Text,{ref:titleRef,style:[_objectSpread({color:titleColor},Platform.OS==='ios'?fonts.regular:fonts.medium),styles.title,titleStyle],numberOfLines:1,accessible:true,accessibilityTraits:\"header\",accessibilityRole:Platform.OS==='web'?'heading':'header',__source:{fileName:_jsxFileName,lineNumber:85}},title),subtitle?React.createElement(Text,{style:[styles.subtitle,{color:subtitleColor},subtitleStyle],numberOfLines:1,__source:{fileName:_jsxFileName,lineNumber:104}},subtitle):null));}}]);return AppbarContent;}(React.Component);AppbarContent.displayName='Appbar.Content';var styles=StyleSheet.create({container:{flex:1,paddingHorizontal:12},title:{fontSize:Platform.OS==='ios'?17:20},subtitle:{fontSize:Platform.OS==='ios'?11:14}});export default withTheme(AppbarContent);export{AppbarContent};","map":{"version":3,"sources":["AppbarContent.tsx"],"names":["AppbarContent","React","Component","displayName","titleColor","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","theme","title","rest","fonts","subtitleColor","color","styles","Platform","StyleSheet","container","flex","paddingHorizontal","fontSize","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in a appbar.\n */\nclass AppbarContent extends React.Component<Props> {\n  static displayName = 'Appbar.Content';\n\n  render() {\n    const {\n      color: titleColor = white,\n      subtitle,\n      subtitleStyle,\n      onPress,\n      style,\n      titleRef,\n      titleStyle,\n      theme,\n      title,\n      ...rest\n    } = this.props;\n    const { fonts } = theme;\n\n    const subtitleColor = color(titleColor)\n      .alpha(0.7)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableWithoutFeedback onPress={onPress}>\n        <View style={[styles.container, style]} {...rest}>\n          <Text\n            ref={titleRef}\n            style={[\n              {\n                color: titleColor,\n                ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium),\n              },\n              styles.title,\n              titleStyle,\n            ]}\n            numberOfLines={1}\n            accessible\n            accessibilityTraits=\"header\"\n            // @ts-ignore\n            accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n          >\n            {title}\n          </Text>\n          {subtitle ? (\n            <Text\n              style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n              numberOfLines={1}\n            >\n              {subtitle}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nexport { AppbarContent };\n"]},"metadata":{},"sourceType":"module"}