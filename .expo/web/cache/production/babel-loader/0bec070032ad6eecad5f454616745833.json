{"ast":null,"code":"'use strict';import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component}from'react';import PropTypes from'prop-types';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Animated from\"react-native-web/dist/exports/Animated\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import ViewPropTypes from\"react-native-web/dist/exports/ViewPropTypes\";import View from\"react-native-web/dist/exports/View\";var DEFAULT_PREVIEW_OPEN_DELAY=700;var PREVIEW_CLOSE_DELAY=300;var MAX_VELOCITY_CONTRIBUTION=5;var SCROLL_LOCK_MILLISECONDS=300;var SwipeRow=function(_Component){_inherits(SwipeRow,_Component);function SwipeRow(props){var _this;_classCallCheck(this,SwipeRow);_this=_possibleConstructorReturn(this,_getPrototypeOf(SwipeRow).call(this,props));_this.ensureScrollEnabled=function(){if(!_this.parentScrollEnabled){_this.parentScrollEnabled=true;_this.props.setScrollEnabled&&_this.props.setScrollEnabled(true);}};_this.combinedOnPress=function(){var onPress=_this.props.children[1].props.onPress;_this.onRowPress();onPress&&onPress();};_this.isOpen=false;_this.previousTrackedTranslateX=0;_this.currentTranslateX=0;_this.previousTrackedDirection=null;_this.horizontalSwipeGestureBegan=false;_this.swipeInitialX=null;_this.parentScrollEnabled=true;_this.ranPreview=false;_this._ensureScrollEnabledTimer=null;_this.isForceClosing=false;_this.state={previewRepeatInterval:null,timeBetweenPreviewRepeats:null,dimensionsSet:false,hiddenHeight:_this.props.disableHiddenLayoutCalculation?'100%':0,hiddenWidth:_this.props.disableHiddenLayoutCalculation?'100%':0};_this._translateX=new Animated.Value(0);_this._panResponder=PanResponder.create({onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(e,gs){return _this.handleOnMoveShouldSetPanResponder(e,gs);},onPanResponderMove:function onPanResponderMove(e,gs){return _this.handlePanResponderMove(e,gs);},onPanResponderRelease:function onPanResponderRelease(e,gs){return _this.handlePanResponderEnd(e,gs);},onPanResponderTerminate:function onPanResponderTerminate(e,gs){return _this.handlePanResponderEnd(e,gs);},onShouldBlockNativeResponder:function onShouldBlockNativeResponder(){return false;}});_this._translateX.addListener(function(_ref){var value=_ref.value;_this.currentTranslateX=value;if(_this.props.onSwipeValueChange){var direction=_this.previousTrackedDirection;if(value!==_this.previousTrackedTranslateX){direction=value>_this.previousTrackedTranslateX?'right':'left';}_this.props.onSwipeValueChange&&_this.props.onSwipeValueChange({isOpen:_this.isOpen,direction:direction,value:value,key:_this.props.swipeKey});_this.previousTrackedTranslateX=value;_this.previousTrackedDirection=direction;}});if(_this.props.forceCloseToRightThreshold&&_this.props.forceCloseToRightThreshold>0){_this._translateX.addListener(function(_ref2){var value=_ref2.value;if(!_this.isForceClosing&&Dimensions.get('window').width+value<_this.props.forceCloseToRightThreshold){_this.isForceClosing=true;_this.forceCloseRow('right');if(_this.props.onForceCloseToRight){_this.props.onForceCloseToRight();}}});}if(_this.props.forceCloseToLeftThreshold&&_this.props.forceCloseToRightThreshold>0){_this._translateX.addListener(function(_ref3){var value=_ref3.value;if(!_this.isForceClosing&&Dimensions.get('window').width-value<_this.props.forceCloseToLeftThreshold){_this.isForceClosing=true;_this.forceCloseRow('left');if(_this.props.onForceCloseToLeft){_this.props.onForceCloseToLeft();}}});}return _this;}_createClass(SwipeRow,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearTimeout(this._ensureScrollEnabledTimer);this._translateX.removeAllListeners();}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.state.hiddenHeight!==nextState.hiddenHeight||this.state.hiddenWidth!==nextState.hiddenWidth||!this.props.shouldItemUpdate||this.props.shouldItemUpdate&&this.props.shouldItemUpdate(this.props.item,nextProps.item)){return true;}return false;}},{key:\"getPreviewAnimation\",value:function getPreviewAnimation(toValue,delay){return Animated.timing(this._translateX,{duration:this.props.previewDuration,toValue:toValue,delay:delay,useNativeDriver:this.props.useNativeDriver});}},{key:\"onContentLayout\",value:function onContentLayout(e){var _this2=this;this.setState(_objectSpread({dimensionsSet:!this.props.recalculateHiddenLayout},!this.props.disableHiddenLayoutCalculation?{hiddenHeight:e.nativeEvent.layout.height,hiddenWidth:e.nativeEvent.layout.width}:{}));if(this.props.preview&&!this.ranPreview){this.ranPreview=true;this.doFullAnimation();if(this.props.previewRepeat){this.setState({previewRepeatInterval:setInterval(function(){_this2.doFullAnimation();},this.state.timeBetweenPreviewRepeats)});}}}},{key:\"doFullAnimation\",value:function doFullAnimation(){var _this3=this;var previewOpenValue=this.props.previewOpenValue||this.props.rightOpenValue*0.5;return this.getPreviewAnimation(previewOpenValue,this.props.previewOpenDelay).start(function(){_this3.getPreviewAnimation(0,PREVIEW_CLOSE_DELAY).start();});}},{key:\"onRowPress\",value:function onRowPress(){if(this.props.onRowPress){this.props.onRowPress();}else{if(this.props.closeOnRowPress){this.closeRow();}}}},{key:\"handleOnMoveShouldSetPanResponder\",value:function handleOnMoveShouldSetPanResponder(e,gs){var dx=gs.dx;return Math.abs(dx)>this.props.directionalDistanceChangeThreshold;}},{key:\"handlePanResponderMove\",value:function handlePanResponderMove(e,gestureState){if(this.isForceClosing){return;}var dx=gestureState.dx,dy=gestureState.dy;var absDx=Math.abs(dx);var absDy=Math.abs(dy);if(absDx>this.props.directionalDistanceChangeThreshold||absDy>this.props.directionalDistanceChangeThreshold){if(absDy>absDx&&!this.horizontalSwipeGestureBegan){return;}if(this.parentScrollEnabled){this.parentScrollEnabled=false;this.props.setScrollEnabled&&this.props.setScrollEnabled(false);}if(this.swipeInitialX===null){this.swipeInitialX=this.currentTranslateX;}if(!this.horizontalSwipeGestureBegan){this.horizontalSwipeGestureBegan=true;this.props.swipeGestureBegan&&this.props.swipeGestureBegan();}var newDX=this.swipeInitialX+dx;if(this.props.disableLeftSwipe&&newDX<0){newDX=0;}if(this.props.disableRightSwipe&&newDX>0){newDX=0;}if(this.props.stopLeftSwipe&&newDX>this.props.stopLeftSwipe){newDX=this.props.stopLeftSwipe;}if(this.props.stopRightSwipe&&newDX<this.props.stopRightSwipe){newDX=this.props.stopRightSwipe;}this._translateX.setValue(newDX);}}},{key:\"handlePanResponderEnd\",value:function handlePanResponderEnd(e,gestureState){var _this4=this;if(this.isForceClosing){setTimeout(function(){_this4.isForceClosing=false;},500);}var swipeToOpenVelocityContribution=this.props.swipeToOpenVelocityContribution;var possibleExtraPixels=this.props.rightOpenValue*swipeToOpenVelocityContribution;var clampedVelocity=Math.min(gestureState.vx,MAX_VELOCITY_CONTRIBUTION);var projectedExtraPixels=possibleExtraPixels*(clampedVelocity/MAX_VELOCITY_CONTRIBUTION);this._ensureScrollEnabledTimer=setTimeout(this.ensureScrollEnabled,SCROLL_LOCK_MILLISECONDS);var toValue=0;if(this.currentTranslateX>=0){if(this.swipeInitialX<this.currentTranslateX){if(this.currentTranslateX-projectedExtraPixels>this.props.leftOpenValue*(this.props.swipeToOpenPercent/100)){toValue=this.isForceClosing?0:this.props.leftOpenValue;}}else{if(this.currentTranslateX-projectedExtraPixels>this.props.leftOpenValue*(1-this.props.swipeToClosePercent/100)){toValue=this.isForceClosing?0:this.props.leftOpenValue;}}}else{if(this.props.disableLeftSwipe){return;}if(this.swipeInitialX>this.currentTranslateX){if(this.currentTranslateX-projectedExtraPixels<this.props.rightOpenValue*(this.props.swipeToOpenPercent/100)){toValue=this.isForceClosing?0:this.props.rightOpenValue;}}else{if(this.currentTranslateX-projectedExtraPixels<this.props.rightOpenValue*(1-this.props.swipeToClosePercent/100)){toValue=this.isForceClosing?0:this.props.rightOpenValue;}}}this.manuallySwipeRow(toValue);}},{key:\"closeRow\",value:function closeRow(){this.manuallySwipeRow(0);}},{key:\"forceCloseRow\",value:function forceCloseRow(direction){var _this5=this;this.manuallySwipeRow(0,function(){if(direction==='right'&&_this5.props.onForceCloseToRightEnd){_this5.props.onForceCloseToRightEnd();}else if(direction==='left'&&_this5.props.onForceCloseToLeftEnd){_this5.props.onForceCloseToLeftEnd();}});}},{key:\"closeRowWithoutAnimation\",value:function closeRowWithoutAnimation(){this._translateX.setValue(0);this.ensureScrollEnabled();this.isOpen=false;this.props.onRowDidClose&&this.props.onRowDidClose();this.props.onRowClose&&this.props.onRowClose();this.swipeInitialX=null;this.horizontalSwipeGestureBegan=false;}},{key:\"manuallySwipeRow\",value:function manuallySwipeRow(toValue,onAnimationEnd){var _this6=this;Animated.spring(this._translateX,{toValue:toValue,friction:this.props.friction,tension:this.props.tension,restSpeedThreshold:this.props.restSpeedThreshold,restDisplacementThreshold:this.props.restDisplacementThreshold,useNativeDriver:this.props.useNativeDriver}).start(function(){_this6.ensureScrollEnabled();if(toValue===0){_this6.isOpen=false;_this6.props.onRowDidClose&&_this6.props.onRowDidClose();}else{_this6.isOpen=true;_this6.props.onRowDidOpen&&_this6.props.onRowDidOpen(toValue);}if(onAnimationEnd){onAnimationEnd();}});if(toValue===0){this.props.onRowClose&&this.props.onRowClose();}else{this.props.onRowOpen&&this.props.onRowOpen(toValue);}this.swipeInitialX=null;this.horizontalSwipeGestureBegan=false;}},{key:\"renderVisibleContent\",value:function renderVisibleContent(){if(!this.props.closeOnRowPress){return this.props.children[1];}var onPress=this.props.children[1].props.onPress;if(onPress){return React.cloneElement(this.props.children[1],_objectSpread({},this.props.children[1].props,{onPress:this.combinedOnPress}));}return React.createElement(TouchableOpacity,{activeOpacity:1,onPress:this.combinedOnPress,accessible:false},this.props.children[1]);}},{key:\"renderRowContent\",value:function renderRowContent(){var _this7=this;if(this.state.dimensionsSet){return React.createElement(Animated.View,_extends({manipulationModes:['translateX']},this._panResponder.panHandlers,{style:{zIndex:2,transform:[{translateX:this._translateX}]}}),this.renderVisibleContent());}else{return React.createElement(Animated.View,_extends({manipulationModes:['translateX']},this._panResponder.panHandlers,{onLayout:function onLayout(e){return _this7.onContentLayout(e);},style:{zIndex:2,transform:[{translateX:this._translateX}]}}),this.renderVisibleContent());}}},{key:\"render\",value:function render(){return React.createElement(View,{style:this.props.style?this.props.style:styles.container},React.createElement(View,{style:[styles.hidden,{height:this.state.hiddenHeight,width:this.state.hiddenWidth}]},this.props.children[0]),this.renderRowContent());}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){if(!nextProps.previewRepeat){clearInterval(prevState.previewRepeatInterval);prevState.previewRepeatInterval=null;}prevState.timeBetweenPreviewRepeats=nextProps.previewDuration*2+nextProps.previewOpenDelay+PREVIEW_CLOSE_DELAY+nextProps.previewRepeatDelay;return prevState;}}]);return SwipeRow;}(Component);var styles=StyleSheet.create({container:{},hidden:{zIndex:1,bottom:0,left:0,overflow:'hidden',position:'absolute',right:0,top:0}});SwipeRow.propTypes={setScrollEnabled:PropTypes.func,swipeGestureBegan:PropTypes.func,onRowOpen:PropTypes.func,onRowDidOpen:PropTypes.func,leftOpenValue:PropTypes.number,rightOpenValue:PropTypes.number,stopLeftSwipe:PropTypes.number,stopRightSwipe:PropTypes.number,friction:PropTypes.number,tension:PropTypes.number,restSpeedThreshold:PropTypes.number,restDisplacementThreshold:PropTypes.number,closeOnRowPress:PropTypes.bool,disableLeftSwipe:PropTypes.bool,disableRightSwipe:PropTypes.bool,recalculateHiddenLayout:PropTypes.bool,disableHiddenLayoutCalculation:PropTypes.bool,onRowClose:PropTypes.func,onRowDidClose:PropTypes.func,style:ViewPropTypes.style,preview:PropTypes.bool,previewDuration:PropTypes.number,previewRepeat:PropTypes.bool,previewRepeatDelay:PropTypes.number,previewOpenValue:PropTypes.number,directionalDistanceChangeThreshold:PropTypes.number,swipeToOpenPercent:PropTypes.number,swipeToOpenVelocityContribution:PropTypes.number,swipeToClosePercent:PropTypes.number,shouldItemUpdate:PropTypes.func,onSwipeValueChange:PropTypes.func,forceCloseToLeftThreshold:PropTypes.number,forceCloseToRightThreshold:PropTypes.number,onForceCloseToLeft:PropTypes.func,onForceCloseToRight:PropTypes.func,onForceCloseToLeftEnd:PropTypes.func,onForceCloseToRightEnd:PropTypes.func,useNativeDriver:PropTypes.bool,children:PropTypes.node.isRequired,swipeKey:PropTypes.string};SwipeRow.defaultProps={leftOpenValue:0,rightOpenValue:0,closeOnRowPress:true,disableLeftSwipe:false,disableRightSwipe:false,recalculateHiddenLayout:false,disableHiddenLayoutCalculation:false,preview:false,previewDuration:300,previewOpenDelay:DEFAULT_PREVIEW_OPEN_DELAY,directionalDistanceChangeThreshold:2,swipeToOpenPercent:50,swipeToOpenVelocityContribution:0,swipeToClosePercent:50,item:{},useNativeDriver:true,previewRepeat:false,previewRepeatDelay:1000};export default SwipeRow;","map":{"version":3,"sources":["/Users/progupta/Documents/testapp/node_modules/react-native-swipe-list-view/components/SwipeRow.js"],"names":["React","Component","PropTypes","DEFAULT_PREVIEW_OPEN_DELAY","PREVIEW_CLOSE_DELAY","MAX_VELOCITY_CONTRIBUTION","SCROLL_LOCK_MILLISECONDS","SwipeRow","props","ensureScrollEnabled","parentScrollEnabled","setScrollEnabled","combinedOnPress","onPress","children","onRowPress","isOpen","previousTrackedTranslateX","currentTranslateX","previousTrackedDirection","horizontalSwipeGestureBegan","swipeInitialX","ranPreview","_ensureScrollEnabledTimer","isForceClosing","state","previewRepeatInterval","timeBetweenPreviewRepeats","dimensionsSet","hiddenHeight","disableHiddenLayoutCalculation","hiddenWidth","_translateX","Animated","Value","_panResponder","PanResponder","create","onMoveShouldSetPanResponder","e","gs","handleOnMoveShouldSetPanResponder","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminate","onShouldBlockNativeResponder","addListener","value","onSwipeValueChange","direction","key","swipeKey","forceCloseToRightThreshold","Dimensions","get","width","forceCloseRow","onForceCloseToRight","forceCloseToLeftThreshold","onForceCloseToLeft","clearTimeout","removeAllListeners","nextProps","nextState","shouldItemUpdate","item","toValue","delay","timing","duration","previewDuration","useNativeDriver","setState","recalculateHiddenLayout","nativeEvent","layout","height","preview","doFullAnimation","previewRepeat","setInterval","previewOpenValue","rightOpenValue","getPreviewAnimation","previewOpenDelay","start","closeOnRowPress","closeRow","dx","Math","abs","directionalDistanceChangeThreshold","gestureState","dy","absDx","absDy","swipeGestureBegan","newDX","disableLeftSwipe","disableRightSwipe","stopLeftSwipe","stopRightSwipe","setValue","setTimeout","swipeToOpenVelocityContribution","possibleExtraPixels","clampedVelocity","min","vx","projectedExtraPixels","leftOpenValue","swipeToOpenPercent","swipeToClosePercent","manuallySwipeRow","onForceCloseToRightEnd","onForceCloseToLeftEnd","onRowDidClose","onRowClose","onAnimationEnd","spring","friction","tension","restSpeedThreshold","restDisplacementThreshold","onRowDidOpen","onRowOpen","cloneElement","panHandlers","zIndex","transform","translateX","renderVisibleContent","onContentLayout","style","styles","container","hidden","renderRowContent","prevState","clearInterval","previewRepeatDelay","StyleSheet","bottom","left","overflow","position","right","top","propTypes","func","number","bool","ViewPropTypes","node","isRequired","string","defaultProps"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Dimensions,\n    Animated,\n    PanResponder,\n    StyleSheet,\n    TouchableOpacity,\n    ViewPropTypes,\n    View,\n} from 'react-native';\n\nconst DEFAULT_PREVIEW_OPEN_DELAY = 700;\nconst PREVIEW_CLOSE_DELAY = 300;\nconst MAX_VELOCITY_CONTRIBUTION = 5;\nconst SCROLL_LOCK_MILLISECONDS = 300;\n\n/**\n * Row that is generally used in a SwipeListView.\n * If you are rendering a SwipeRow explicitly you must pass the SwipeRow exactly two children.\n * The first will be rendered behind the second.\n * e.g.\n  <SwipeRow>\n      <View style={hiddenRowStyle} />\n      <View style={visibleRowStyle} />\n  </SwipeRow>\n */\nclass SwipeRow extends Component {\n    constructor(props) {\n        super(props);\n        this.isOpen = false;\n        this.previousTrackedTranslateX = 0;\n        this.currentTranslateX = 0;\n        this.previousTrackedDirection = null;\n        this.horizontalSwipeGestureBegan = false;\n        this.swipeInitialX = null;\n        this.parentScrollEnabled = true;\n        this.ranPreview = false;\n        this._ensureScrollEnabledTimer = null;\n        this.isForceClosing = false;\n        this.state = {\n            previewRepeatInterval: null,\n            timeBetweenPreviewRepeats: null,\n            dimensionsSet: false,\n            hiddenHeight: this.props.disableHiddenLayoutCalculation\n                ? '100%'\n                : 0,\n            hiddenWidth: this.props.disableHiddenLayoutCalculation ? '100%' : 0,\n        };\n        this._translateX = new Animated.Value(0);\n\n        this._panResponder = PanResponder.create({\n            onMoveShouldSetPanResponder: (e, gs) =>\n                this.handleOnMoveShouldSetPanResponder(e, gs),\n            onPanResponderMove: (e, gs) => this.handlePanResponderMove(e, gs),\n            onPanResponderRelease: (e, gs) => this.handlePanResponderEnd(e, gs),\n            onPanResponderTerminate: (e, gs) =>\n                this.handlePanResponderEnd(e, gs),\n            onShouldBlockNativeResponder: () => false,\n        });\n\n        this._translateX.addListener(({ value }) => {\n            this.currentTranslateX = value;\n            if (this.props.onSwipeValueChange) {\n                let direction = this.previousTrackedDirection;\n                if (value !== this.previousTrackedTranslateX) {\n                    direction =\n                        value > this.previousTrackedTranslateX\n                            ? 'right'\n                            : 'left';\n                }\n                this.props.onSwipeValueChange &&\n                    this.props.onSwipeValueChange({\n                        isOpen: this.isOpen,\n                        direction,\n                        value,\n                        key: this.props.swipeKey,\n                    });\n                this.previousTrackedTranslateX = value;\n                this.previousTrackedDirection = direction;\n            }\n        });\n\n        if (\n            this.props.forceCloseToRightThreshold &&\n            this.props.forceCloseToRightThreshold > 0\n        ) {\n            this._translateX.addListener(({ value }) => {\n                if (\n                    !this.isForceClosing &&\n                    Dimensions.get('window').width + value <\n                        this.props.forceCloseToRightThreshold\n                ) {\n                    this.isForceClosing = true;\n                    this.forceCloseRow('right');\n                    if (this.props.onForceCloseToRight) {\n                        this.props.onForceCloseToRight();\n                    }\n                }\n            });\n        }\n\n        if (\n            this.props.forceCloseToLeftThreshold &&\n            this.props.forceCloseToRightThreshold > 0\n        ) {\n            this._translateX.addListener(({ value }) => {\n                if (\n                    !this.isForceClosing &&\n                    Dimensions.get('window').width - value <\n                        this.props.forceCloseToLeftThreshold\n                ) {\n                    this.isForceClosing = true;\n                    this.forceCloseRow('left');\n                    if (this.props.onForceCloseToLeft) {\n                        this.props.onForceCloseToLeft();\n                    }\n                }\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this._ensureScrollEnabledTimer);\n        this._translateX.removeAllListeners();\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (\n            this.state.hiddenHeight !== nextState.hiddenHeight ||\n            this.state.hiddenWidth !== nextState.hiddenWidth ||\n            !this.props.shouldItemUpdate ||\n            (this.props.shouldItemUpdate &&\n                this.props.shouldItemUpdate(this.props.item, nextProps.item))\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (!nextProps.previewRepeat) {\n            clearInterval(prevState.previewRepeatInterval);\n            prevState.previewRepeatInterval = null;\n        }\n        prevState.timeBetweenPreviewRepeats =\n            nextProps.previewDuration * 2 +\n            nextProps.previewOpenDelay +\n            PREVIEW_CLOSE_DELAY +\n            nextProps.previewRepeatDelay;\n        return prevState;\n    }\n\n    getPreviewAnimation(toValue, delay) {\n        return Animated.timing(this._translateX, {\n            duration: this.props.previewDuration,\n            toValue,\n            delay,\n            useNativeDriver: this.props.useNativeDriver,\n        });\n    }\n\n    onContentLayout(e) {\n        this.setState({\n            dimensionsSet: !this.props.recalculateHiddenLayout,\n            ...(!this.props.disableHiddenLayoutCalculation\n                ? {\n                      hiddenHeight: e.nativeEvent.layout.height,\n                      hiddenWidth: e.nativeEvent.layout.width,\n                  }\n                : {}),\n        });\n\n        if (this.props.preview && !this.ranPreview) {\n            this.ranPreview = true;\n            this.doFullAnimation();\n            if (this.props.previewRepeat) {\n                this.setState({\n                    previewRepeatInterval: setInterval(() => {\n                        this.doFullAnimation();\n                    }, this.state.timeBetweenPreviewRepeats),\n                });\n            }\n        }\n    }\n\n    doFullAnimation() {\n        const previewOpenValue =\n            this.props.previewOpenValue || this.props.rightOpenValue * 0.5;\n        return this.getPreviewAnimation(\n            previewOpenValue,\n            this.props.previewOpenDelay\n        ).start(() => {\n            this.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();\n        });\n    }\n\n    onRowPress() {\n        if (this.props.onRowPress) {\n            this.props.onRowPress();\n        } else {\n            if (this.props.closeOnRowPress) {\n                this.closeRow();\n            }\n        }\n    }\n\n    handleOnMoveShouldSetPanResponder(e, gs) {\n        const { dx } = gs;\n        return Math.abs(dx) > this.props.directionalDistanceChangeThreshold;\n    }\n\n    handlePanResponderMove(e, gestureState) {\n        /* If the view is force closing, then ignore Moves. Return */\n        if (this.isForceClosing) {\n            return;\n        }\n\n        /* Else, do normal job */\n        const { dx, dy } = gestureState;\n        const absDx = Math.abs(dx);\n        const absDy = Math.abs(dy);\n\n        // this check may not be necessary because we don't capture the move until we pass the threshold\n        // just being extra safe here\n        if (\n            absDx > this.props.directionalDistanceChangeThreshold ||\n            absDy > this.props.directionalDistanceChangeThreshold\n        ) {\n            // we have enough to determine direction\n            if (absDy > absDx && !this.horizontalSwipeGestureBegan) {\n                // user is moving vertically, do nothing, listView will handle\n                return;\n            }\n\n            // user is moving horizontally\n            if (this.parentScrollEnabled) {\n                // disable scrolling on the listView parent\n                this.parentScrollEnabled = false;\n                this.props.setScrollEnabled &&\n                    this.props.setScrollEnabled(false);\n            }\n\n            if (this.swipeInitialX === null) {\n                // set tranlateX value when user started swiping\n                this.swipeInitialX = this.currentTranslateX;\n            }\n            if (!this.horizontalSwipeGestureBegan) {\n                this.horizontalSwipeGestureBegan = true;\n                this.props.swipeGestureBegan && this.props.swipeGestureBegan();\n            }\n\n            let newDX = this.swipeInitialX + dx;\n            if (this.props.disableLeftSwipe && newDX < 0) {\n                newDX = 0;\n            }\n            if (this.props.disableRightSwipe && newDX > 0) {\n                newDX = 0;\n            }\n\n            if (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {\n                newDX = this.props.stopLeftSwipe;\n            }\n            if (\n                this.props.stopRightSwipe &&\n                newDX < this.props.stopRightSwipe\n            ) {\n                newDX = this.props.stopRightSwipe;\n            }\n\n            this._translateX.setValue(newDX);\n        }\n    }\n\n    ensureScrollEnabled = () => {\n        if (!this.parentScrollEnabled) {\n            this.parentScrollEnabled = true;\n            this.props.setScrollEnabled && this.props.setScrollEnabled(true);\n        }\n    };\n\n    handlePanResponderEnd(e, gestureState) {\n        /* PandEnd will reset the force-closing state when it's true. */\n        if (this.isForceClosing) {\n            setTimeout(() => {\n                this.isForceClosing = false;\n            }, 500); // 500 is the default Animated.spring's duration used in manuallySwipeRow\n        }\n        // decide how much the velocity will affect the final position that the list item settles in.\n        const swipeToOpenVelocityContribution = this.props\n            .swipeToOpenVelocityContribution;\n        const possibleExtraPixels =\n            this.props.rightOpenValue * swipeToOpenVelocityContribution;\n        const clampedVelocity = Math.min(\n            gestureState.vx,\n            MAX_VELOCITY_CONTRIBUTION\n        );\n        const projectedExtraPixels =\n            possibleExtraPixels * (clampedVelocity / MAX_VELOCITY_CONTRIBUTION);\n\n        // re-enable scrolling on listView parent\n        this._ensureScrollEnabledTimer = setTimeout(\n            this.ensureScrollEnabled,\n            SCROLL_LOCK_MILLISECONDS\n        );\n\n        // finish up the animation\n        let toValue = 0;\n        if (this.currentTranslateX >= 0) {\n            // trying to swipe right\n            // if (this.props.disableRightSwipe) {\n            //    return;\n            // }\n\n            if (this.swipeInitialX < this.currentTranslateX) {\n                if (\n                    this.currentTranslateX - projectedExtraPixels >\n                    this.props.leftOpenValue *\n                        (this.props.swipeToOpenPercent / 100)\n                ) {\n                    // we're more than halfway\n                    toValue = this.isForceClosing\n                        ? 0\n                        : this.props.leftOpenValue;\n                }\n            } else {\n                if (\n                    this.currentTranslateX - projectedExtraPixels >\n                    this.props.leftOpenValue *\n                        (1 - this.props.swipeToClosePercent / 100)\n                ) {\n                    toValue = this.isForceClosing\n                        ? 0\n                        : this.props.leftOpenValue;\n                }\n            }\n        } else {\n            // trying to swipe left\n            if (this.props.disableLeftSwipe) {\n                return;\n            }\n\n            if (this.swipeInitialX > this.currentTranslateX) {\n                if (\n                    this.currentTranslateX - projectedExtraPixels <\n                    this.props.rightOpenValue *\n                        (this.props.swipeToOpenPercent / 100)\n                ) {\n                    // we're more than halfway\n                    toValue = this.isForceClosing\n                        ? 0\n                        : this.props.rightOpenValue;\n                }\n            } else {\n                if (\n                    this.currentTranslateX - projectedExtraPixels <\n                    this.props.rightOpenValue *\n                        (1 - this.props.swipeToClosePercent / 100)\n                ) {\n                    toValue = this.isForceClosing\n                        ? 0\n                        : this.props.rightOpenValue;\n                }\n            }\n        }\n\n        this.manuallySwipeRow(toValue);\n    }\n\n    /*\n     * This method is called by SwipeListView\n     */\n    closeRow() {\n        this.manuallySwipeRow(0);\n    }\n\n    /**\n     * Force close the row toward the end of the given direction.\n     * @param  {String} direction The direction to force close.\n     */\n    forceCloseRow(direction) {\n        this.manuallySwipeRow(0, () => {\n            if (direction === 'right' && this.props.onForceCloseToRightEnd) {\n                this.props.onForceCloseToRightEnd();\n            } else if (\n                direction === 'left' &&\n                this.props.onForceCloseToLeftEnd\n            ) {\n                this.props.onForceCloseToLeftEnd();\n            }\n        });\n    }\n\n    closeRowWithoutAnimation() {\n        this._translateX.setValue(0);\n\n        this.ensureScrollEnabled();\n        this.isOpen = false;\n        this.props.onRowDidClose && this.props.onRowDidClose();\n\n        this.props.onRowClose && this.props.onRowClose();\n\n        this.swipeInitialX = null;\n        this.horizontalSwipeGestureBegan = false;\n    }\n\n    manuallySwipeRow(toValue, onAnimationEnd) {\n        Animated.spring(this._translateX, {\n            toValue,\n            friction: this.props.friction,\n            tension: this.props.tension,\n            restSpeedThreshold: this.props.restSpeedThreshold,\n            restDisplacementThreshold: this.props.restDisplacementThreshold,\n            useNativeDriver: this.props.useNativeDriver,\n        }).start(() => {\n            this.ensureScrollEnabled();\n            if (toValue === 0) {\n                this.isOpen = false;\n                this.props.onRowDidClose && this.props.onRowDidClose();\n            } else {\n                this.isOpen = true;\n                this.props.onRowDidOpen && this.props.onRowDidOpen(toValue);\n            }\n            if (onAnimationEnd) {\n                onAnimationEnd();\n            }\n        });\n\n        if (toValue === 0) {\n            this.props.onRowClose && this.props.onRowClose();\n        } else {\n            this.props.onRowOpen && this.props.onRowOpen(toValue);\n        }\n\n        // reset everything\n        this.swipeInitialX = null;\n        this.horizontalSwipeGestureBegan = false;\n    }\n\n    combinedOnPress = () => {\n        const onPress = this.props.children[1].props.onPress;\n        this.onRowPress();\n        onPress && onPress();\n    };\n\n    renderVisibleContent() {\n        if (!this.props.closeOnRowPress) {\n            return this.props.children[1];\n        }\n\n        // handle touchables\n        const onPress = this.props.children[1].props.onPress;\n\n        if (onPress) {\n            return React.cloneElement(this.props.children[1], {\n                ...this.props.children[1].props,\n                onPress: this.combinedOnPress,\n            });\n        }\n\n        return (\n            <TouchableOpacity\n                activeOpacity={1}\n                onPress={this.combinedOnPress}\n                accessible={false}\n            >\n                {this.props.children[1]}\n            </TouchableOpacity>\n        );\n    }\n\n    renderRowContent() {\n        // We do this annoying if statement for performance.\n        // We don't want the onLayout func to run after it runs once.\n        if (this.state.dimensionsSet) {\n            return (\n                <Animated.View\n                    manipulationModes={['translateX']}\n                    {...this._panResponder.panHandlers}\n                    style={{\n                        zIndex: 2,\n                        transform: [{ translateX: this._translateX }],\n                    }}\n                >\n                    {this.renderVisibleContent()}\n                </Animated.View>\n            );\n        } else {\n            return (\n                <Animated.View\n                    manipulationModes={['translateX']}\n                    {...this._panResponder.panHandlers}\n                    onLayout={e => this.onContentLayout(e)}\n                    style={{\n                        zIndex: 2,\n                        transform: [{ translateX: this._translateX }],\n                    }}\n                >\n                    {this.renderVisibleContent()}\n                </Animated.View>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <View\n                style={this.props.style ? this.props.style : styles.container}\n            >\n                <View\n                    style={[\n                        styles.hidden,\n                        {\n                            height: this.state.hiddenHeight,\n                            width: this.state.hiddenWidth,\n                        },\n                    ]}\n                >\n                    {this.props.children[0]}\n                </View>\n                {this.renderRowContent()}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        // As of RN 0.29 flex: 1 is causing all rows to be the same height\n        // flex: 1\n    },\n    hidden: {\n        zIndex: 1,\n        bottom: 0,\n        left: 0,\n        overflow: 'hidden',\n        position: 'absolute',\n        right: 0,\n        top: 0,\n    },\n});\n\nSwipeRow.propTypes = {\n    /**\n     * Used by the SwipeListView to close rows on scroll events.\n     * You shouldn't need to use this prop explicitly.\n     */\n    setScrollEnabled: PropTypes.func,\n    /**\n     * Called when it has been detected that a row should be swiped open.\n     */\n    swipeGestureBegan: PropTypes.func,\n    /**\n     * Called when a swipe row is animating open. Used by the SwipeListView\n     * to keep references to open rows.\n     */\n    onRowOpen: PropTypes.func,\n    /**\n     * Called when a swipe row has animated open.\n     */\n    onRowDidOpen: PropTypes.func,\n    /**\n     * TranslateX value for opening the row to the left (positive number)\n     */\n    leftOpenValue: PropTypes.number,\n    /**\n     * TranslateX value for opening the row to the right (negative number)\n     */\n    rightOpenValue: PropTypes.number,\n    /**\n     * TranslateX value for stop the row to the left (positive number)\n     */\n    stopLeftSwipe: PropTypes.number,\n    /**\n     * TranslateX value for stop the row to the right (negative number)\n     */\n    stopRightSwipe: PropTypes.number,\n    /**\n     * Friction for the open / close animation\n     */\n    friction: PropTypes.number,\n    /**\n     * Tension for the open / close animation\n     */\n    tension: PropTypes.number,\n    /**\n     * RestSpeedThreshold for the open / close animation\n     */\n    restSpeedThreshold: PropTypes.number,\n    /**\n     * RestDisplacementThreshold for the open / close animation\n     */\n    restDisplacementThreshold: PropTypes.number,\n    /**\n     * Should the row be closed when it is tapped\n     */\n    closeOnRowPress: PropTypes.bool,\n    /**\n     * Disable ability to swipe the row left\n     */\n    disableLeftSwipe: PropTypes.bool,\n    /**\n     * Disable ability to swipe the row right\n     */\n    disableRightSwipe: PropTypes.bool,\n    /**\n     * Enable hidden row onLayout calculations to run always\n     */\n    recalculateHiddenLayout: PropTypes.bool,\n    /**\n     * Disable hidden row onLayout calculations\n     */\n    disableHiddenLayoutCalculation: PropTypes.bool,\n    /**\n     * Called when a swipe row is animating closed\n     */\n    onRowClose: PropTypes.func,\n    /**\n     * Called when a swipe row has animated closed\n     */\n    onRowDidClose: PropTypes.func,\n    /**\n     * Styles for the parent wrapper View of the SwipeRow\n     */\n    style: ViewPropTypes.style,\n    /**\n     * Should the row do a slide out preview to show that it is swipeable\n     */\n    preview: PropTypes.bool,\n    /**\n     * Duration of the slide out preview animation\n     */\n    previewDuration: PropTypes.number,\n    /**\n     * Should the animation repeat until false is provided\n     */\n    previewRepeat: PropTypes.bool,\n    /**\n     * Time between each full completed animation in milliseconds\n     * Default: 1000 (1 second)\n     */\n    previewRepeatDelay: PropTypes.number,\n    /**\n     * TranslateX value for the slide out preview animation\n     * Default: 0.5 * props.rightOpenValue\n     */\n    previewOpenValue: PropTypes.number,\n    /**\n     * The dx value used to detect when a user has begun a swipe gesture\n     */\n    directionalDistanceChangeThreshold: PropTypes.number,\n    /**\n     * What % of the left/right openValue does the user need to swipe\n     * past to trigger the row opening.\n     */\n    swipeToOpenPercent: PropTypes.number,\n    /**\n     * Describes how much the ending velocity of the gesture contributes to whether the swipe will result in the item being closed or open.\n     * A velocity factor of 0 means that the velocity will have no bearing on whether the swipe settles on a closed or open position\n     * and it'll just take into consideration the swipeToOpenPercent.\n     */\n    swipeToOpenVelocityContribution: PropTypes.number,\n    /**\n     * What % of the left/right openValue does the user need to swipe\n     * past to trigger the row closing.\n     */\n    swipeToClosePercent: PropTypes.number,\n    /**\n     * callback to determine whether component should update (currentItem, newItem)\n     */\n    shouldItemUpdate: PropTypes.func,\n    /**\n     * Callback invoked any time the swipe value of the row is changed\n     */\n    onSwipeValueChange: PropTypes.func,\n    /**\n     * TranslateX amount(not value!) threshold that triggers force-closing the row to the Left End (positive number)\n     */\n    forceCloseToLeftThreshold: PropTypes.number,\n    /**\n     * TranslateX amount(not value!) threshold that triggers force-closing the row to the Right End (positive number)\n     */\n    forceCloseToRightThreshold: PropTypes.number,\n    /**\n     * Callback invoked when row is force closing to the Left End\n     */\n    onForceCloseToLeft: PropTypes.func,\n    /**\n     * Callback invoked when row is force closing to the Right End\n     */\n    onForceCloseToRight: PropTypes.func,\n    /**\n     * Callback invoked when row has finished force closing to the Left End\n     */\n    onForceCloseToLeftEnd: PropTypes.func,\n    /**\n     * Callback invoked when row has finished force closing to the Right End\n     */\n    onForceCloseToRightEnd: PropTypes.func,\n    /**\n     * useNativeDriver: true for all animations where possible\n     */\n    useNativeDriver: PropTypes.bool,\n    /**\n     * Children\n     */\n    children: PropTypes.node.isRequired,\n    /**\n     * Key used to identify rows on swipe value changes\n     */\n    swipeKey: PropTypes.string,\n};\n\nSwipeRow.defaultProps = {\n    leftOpenValue: 0,\n    rightOpenValue: 0,\n    closeOnRowPress: true,\n    disableLeftSwipe: false,\n    disableRightSwipe: false,\n    recalculateHiddenLayout: false,\n    disableHiddenLayoutCalculation: false,\n    preview: false,\n    previewDuration: 300,\n    previewOpenDelay: DEFAULT_PREVIEW_OPEN_DELAY,\n    directionalDistanceChangeThreshold: 2,\n    swipeToOpenPercent: 50,\n    swipeToOpenVelocityContribution: 0,\n    swipeToClosePercent: 50,\n    item: {},\n    useNativeDriver: true,\n    previewRepeat: false,\n    previewRepeatDelay: 1000,\n};\n\nexport default SwipeRow;\n"]},"metadata":{},"sourceType":"module"}